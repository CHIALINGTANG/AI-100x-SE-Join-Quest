<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="RunCucumberTest" time="5.822" tests="22" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="MS950"/>
    <property name="java.class.path" value="C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式\target\test-classes;C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式\target\classes;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-java\7.14.0\cucumber-java-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-core\7.14.0\cucumber-core-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-gherkin\7.14.0\cucumber-gherkin-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.14.0\cucumber-gherkin-messages-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\gherkin\26.2.0\gherkin-26.2.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\messages\22.0.0\messages-22.0.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\tag-expressions\5.0.6\tag-expressions-5.0.6.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-expressions\16.1.2\cucumber-expressions-16.1.2.jar;C:\Users\10190013\.m2\repository\io\cucumber\datatable\7.14.0\datatable-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-plugin\7.14.0\cucumber-plugin-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\docstring\7.14.0\docstring-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\html-formatter\20.4.0\html-formatter-20.4.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\junit-xml-formatter\0.2.0\junit-xml-formatter-0.2.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\ci-environment\9.2.0\ci-environment-9.2.0.jar;C:\Users\10190013\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-junit-platform-engine\7.14.0\cucumber-junit-platform-engine-7.14.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\10190013\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite\1.9.3\junit-platform-suite-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-api\1.9.3\junit-platform-suite-api-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.9.3\junit-platform-suite-engine-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.9.3\junit-platform-suite-commons-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Asia/Taipei"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="TW"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\10190013\AppData\Local\Temp\surefire4004230312160899097\surefirebooter-20251003120809863_3.jar C:\Users\10190013\AppData\Local\Temp\surefire4004230312160899097 2025-10-03T12-08-08_191-jvmRun1 surefire-20251003120809863_1tmp surefire_0-20251003120809863_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式\target\test-classes;C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式\target\classes;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-java\7.14.0\cucumber-java-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-core\7.14.0\cucumber-core-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-gherkin\7.14.0\cucumber-gherkin-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.14.0\cucumber-gherkin-messages-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\gherkin\26.2.0\gherkin-26.2.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\messages\22.0.0\messages-22.0.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\tag-expressions\5.0.6\tag-expressions-5.0.6.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-expressions\16.1.2\cucumber-expressions-16.1.2.jar;C:\Users\10190013\.m2\repository\io\cucumber\datatable\7.14.0\datatable-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-plugin\7.14.0\cucumber-plugin-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\docstring\7.14.0\docstring-7.14.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\html-formatter\20.4.0\html-formatter-20.4.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\junit-xml-formatter\0.2.0\junit-xml-formatter-0.2.0.jar;C:\Users\10190013\.m2\repository\io\cucumber\ci-environment\9.2.0\ci-environment-9.2.0.jar;C:\Users\10190013\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\10190013\.m2\repository\io\cucumber\cucumber-junit-platform-engine\7.14.0\cucumber-junit-platform-engine-7.14.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\10190013\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite\1.9.3\junit-platform-suite-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-api\1.9.3\junit-platform-suite-api-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.9.3\junit-platform-suite-engine-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.9.3\junit-platform-suite-commons-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\10190013\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\10190013"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\10190013\AppData\Local\Temp\surefire4004230312160899097\surefirebooter-20251003120809863_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.16+8"/>
    <property name="user.name" value="10190013"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="MS950"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.16+8"/>
    <property name="localRepository" value="C:\Users\10190013\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\10190013\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.16"/>
    <property name="user.dir" value="C:\Users\10190013\source\repos\AI-100x-SE-Join-Quest\入會任務\象棋程式"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="MS950"/>
    <property name="java.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Users\10190013\AppData\Local\Temp\.tmpN6ZvO0;C:\Program Files\Google\Chrome\Application;C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot\bin;D:\oracle\ora102\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\VisualSVN Server\bin;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\nodejs\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\Users\10190013\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\10190013\AppData\Local\Programs\Python\Python313\;C:\Users\10190013\AppData\Local\Programs\Python\Launcher\;C:\Users\10190013\AppData\Local\Microsoft\WindowsApps;C:\Users\10190013\AppData\Roaming\npm;C:\Program Files\Apache\Maven\apache-maven-3.9.11\bin;C:\Users\10190013\.dotnet\tools;C:\Users\10190013\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\10190013\AppData\Local\Programs\Microsoft VS Code\bin;c:\Users\10190013\.vscode\extensions\openai.chatgpt-0.4.15-win32-x64\bin\windows-x86_64;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.16+8"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="Red moves the General within the palace (Legal)" classname="Chinese Chess (象棋) Rules" time="1.434">
    <system-out><![CDATA[
@General
Scenario: Red moves the General within the palace (Legal)     &amp#27;[90m# features/ChineseChess.feature:16&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mGeneral&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mGeneral&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                      &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the General outside the palace (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.143">
    <system-out><![CDATA[
@General
Scenario: Red moves the General outside the palace (Illegal)  &amp#27;[90m# features/ChineseChess.feature:22&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mGeneral&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m)&amp#27;[0m &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mGeneral&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m7&amp#27;[0m&amp#27;[32m)&amp#27;[0m            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                    &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Generals face each other on the same file (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.122">
    <system-out><![CDATA[
@General
Scenario: Generals face each other on the same file (Illegal) &amp#27;[90m# features/ChineseChess.feature:28&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                        &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece         | Position |
    | Red General   | (2, 4)   |
    | Black General | (8, 5)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mGeneral&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                    &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Guard diagonally in the palace (Legal)" classname="Chinese Chess (象棋) Rules" time="0.028">
    <system-out><![CDATA[
@Guard
Scenario: Red moves the Guard diagonally in the palace (Legal) &amp#27;[90m# features/ChineseChess.feature:40&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mGuard&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m    &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mGuard&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m               &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                       &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Guard straight (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.011">
    <system-out><![CDATA[
@Guard
Scenario: Red moves the Guard straight (Illegal)            &amp#27;[90m# features/ChineseChess.feature:46&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mGuard&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mGuard&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m)&amp#27;[0m            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                  &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Rook along a clear rank (Legal)" classname="Chinese Chess (象棋) Rules" time="0.172">
    <system-out><![CDATA[
@Rook
Scenario: Red moves the Rook along a clear rank (Legal)    &amp#27;[90m# features/ChineseChess.feature:55&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mRook&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m)&amp#27;[0m &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mRook&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m9&amp#27;[0m&amp#27;[32m)&amp#27;[0m            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                   &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Rook and attempts to jump over a piece (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.089">
    <system-out><![CDATA[
@Rook
Scenario: Red moves the Rook and attempts to jump over a piece (Illegal) &amp#27;[90m# features/ChineseChess.feature:61&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                   &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece         | Position |
    | Red Rook      | (4, 1)   |
    | Black Soldier | (4, 5)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mRook&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m9&amp#27;[0m&amp#27;[32m)&amp#27;[0m                          &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                               &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Horse in an “L” shape with no block (Legal)" classname="Chinese Chess (象棋) Rules" time="0.015">
    <system-out><![CDATA[
@Horse
Scenario: Red moves the Horse in an ��� shape with no block (Legal) &amp#27;[90m# features/ChineseChess.feature:73&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mHorse&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m)&amp#27;[0m         &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mHorse&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m                    &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                            &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Horse and it is blocked by an adjacent piece (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.014">
    <system-out><![CDATA[
@Horse
Scenario: Red moves the Horse and it is blocked by an adjacent piece (Illegal) &amp#27;[90m# features/ChineseChess.feature:79&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                         &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece      | Position |
    | Red Horse  | (3, 3)   |
    | Black Rook | (4, 3)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mHorse&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m                               &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                                     &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Cannon like a Rook with an empty path (Legal)" classname="Chinese Chess (象棋) Rules" time="0.013">
    <system-out><![CDATA[
@Cannon
Scenario: Red moves the Cannon like a Rook with an empty path (Legal) &amp#27;[90m# features/ChineseChess.feature:92&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mCannon&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m)&amp#27;[0m          &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mCannon&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                     &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                              &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Cannon and jumps exactly one screen to capture (Legal)" classname="Chinese Chess (象棋) Rules" time="0.014">
    <system-out><![CDATA[
@Cannon
Scenario: Red moves the Cannon and jumps exactly one screen to capture (Legal) &amp#27;[90m# features/ChineseChess.feature:98&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                         &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece         | Position |
    | Red Cannon    | (6, 2)   |
    | Black Soldier | (6, 5)   |
    | Black Guard   | (6, 8)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mCannon&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                              &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                                       &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Cannon and tries to jump with zero screens (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.16">
    <system-out><![CDATA[
@Cannon
Scenario: Red moves the Cannon and tries to jump with zero screens (Illegal) &amp#27;[90m# features/ChineseChess.feature:109&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                       &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece       | Position |
    | Red Cannon  | (6, 2)   |
    | Black Guard | (6, 8)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mCannon&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                                   &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Cannon and tries to jump with more than one screen (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.02">
    <system-out><![CDATA[
@Cannon
Scenario: Red moves the Cannon and tries to jump with more than one screen (Illegal) &amp#27;[90m# features/ChineseChess.feature:118&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                               &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece         | Position |
    | Red Cannon    | (6, 2)   |
    | Red Soldier   | (6, 4)   |
    | Black Soldier | (6, 5)   |
    | Black Guard   | (6, 8)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mCannon&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                                    &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                                           &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Elephant 2-step diagonal with a clear midpoint (Legal)" classname="Chinese Chess (象棋) Rules" time="0.015">
    <system-out><![CDATA[
@Elephant
Scenario: Red moves the Elephant 2-step diagonal with a clear midpoint (Legal) &amp#27;[90m# features/ChineseChess.feature:132&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mElephant&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m)&amp#27;[0m                 &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mElephant&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                            &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                                       &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Elephant and tries to cross the river (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.011">
    <system-out><![CDATA[
@Elephant
Scenario: Red moves the Elephant and tries to cross the river (Illegal) &amp#27;[90m# features/ChineseChess.feature:138&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mElephant&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m)&amp#27;[0m          &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mElephant&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m7&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                     &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                              &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Elephant and its midpoint is blocked (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.064">
    <system-out><![CDATA[
@Elephant
Scenario: Red moves the Elephant and its midpoint is blocked (Illegal) &amp#27;[90m# features/ChineseChess.feature:144&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                 &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece        | Position |
    | Red Elephant | (3, 3)   |
    | Black Rook   | (4, 4)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mElephant&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                    &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                             &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Soldier forward before crossing the river (Legal)" classname="Chinese Chess (象棋) Rules" time="0.071">
    <system-out><![CDATA[
@Soldier
Scenario: Red moves the Soldier forward before crossing the river (Legal) &amp#27;[90m# features/ChineseChess.feature:157&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m             &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                        &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                                  &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Soldier and tries to move sideways before crossing (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.033">
    <system-out><![CDATA[
@Soldier
Scenario: Red moves the Soldier and tries to move sideways before crossing (Illegal) &amp#27;[90m# features/ChineseChess.feature:163&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                        &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m                                   &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                                           &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Soldier sideways after crossing the river (Legal)" classname="Chinese Chess (象棋) Rules" time="0.016">
    <system-out><![CDATA[
@Soldier
Scenario: Red moves the Soldier sideways after crossing the river (Legal) &amp#27;[90m# features/ChineseChess.feature:169&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m             &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m&amp#27;[32m)&amp#27;[0m                        &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is legal&amp#27;[0m                                                  &amp#27;[90m# steps.ChineseChessSteps.the_move_is_legal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red moves the Soldier and attempts to move backward after crossing (Illegal)" classname="Chinese Chess (象棋) Rules" time="0.049">
    <system-out><![CDATA[
@Soldier
Scenario: Red moves the Soldier and attempts to move backward after crossing (Illegal) &amp#27;[90m# features/ChineseChess.feature:175&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board is empty except for a &amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m at (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                          &amp#27;[90m# steps.ChineseChessSteps.the_board_is_empty_except_for_a_piece(java.lang.String,java.lang.String,int,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mSoldier&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m6&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m)&amp#27;[0m                                     &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe move is illegal&amp#27;[0m                                                             &amp#27;[90m# steps.ChineseChessSteps.the_move_is_illegal()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red captures opponent&apos;s General and wins immediately (Legal)" classname="Chinese Chess (象棋) Rules" time="0.025">
    <system-out><![CDATA[
@Winning
Scenario: Red captures opponent's General and wins immediately (Legal) &amp#27;[90m# features/ChineseChess.feature:184&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                 &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece         | Position |
    | Red Rook      | (5, 5)   |
    | Black General | (5, 8)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mRook&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                        &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m wins immediately&amp#27;[0m                                            &amp#27;[90m# steps.ChineseChessSteps.side_wins_immediately(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Red captures a non-General piece and the game continues (Legal)" classname="Chinese Chess (象棋) Rules" time="0.011">
    <system-out><![CDATA[
@Winning
Scenario: Red captures a non-General piece and the game continues (Legal) &amp#27;[90m# features/ChineseChess.feature:193&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe board has:&amp#27;[0m                                                    &amp#27;[90m# steps.ChineseChessSteps.the_board_has(io.cucumber.datatable.DataTable)&amp#27;[0m
    | Piece        | Position |
    | Red Rook     | (5, 5)   |
    | Black Cannon | (5, 8)   |
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1mRed&amp#27;[0m&amp#27;[32m moves the &amp#27;[0m&amp#27;[32m&amp#27;[1mRook&amp#27;[0m&amp#27;[32m from (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m) to (&amp#27;[0m&amp#27;[32m&amp#27;[1m5&amp#27;[0m&amp#27;[32m, &amp#27;[0m&amp#27;[32m&amp#27;[1m8&amp#27;[0m&amp#27;[32m)&amp#27;[0m                           &amp#27;[90m# steps.ChineseChessSteps.side_moves_piece(java.lang.String,java.lang.String,int,int,int,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe game is not over just from that capture&amp#27;[0m                        &amp#27;[90m# steps.ChineseChessSteps.the_game_is_not_over_just_from_that_capture()&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>